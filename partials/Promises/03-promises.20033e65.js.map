{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAWC,SAASC,cAAc,yBAClCC,EAAOF,SAASC,cAAc,aAKpC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAXPN,EAASc,iBAAiB,SAe1B,SAAyBC,GACvBA,EAAEC,iBACF,IAAgCC,EAAAd,EAAKe,SAA7BC,EAAwBF,EAAxBX,MAAOc,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACjBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAChCG,QAAQC,IAAIN,GACZK,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GACZ,IAAK,IAAIG,EAAI,EAAGA,GAAKH,EAAaG,GAAK,EACjCA,EAAI,IAAKP,GAAcG,GAE3BrB,EAAcyB,EAAGP,GACdQ,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjBR,EAAAkC,OAAOC,QACL,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAGjD6B,OAAM,SAAAJ,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClBR,EAAAkC,OAAOI,QACL,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAIjDH,EAAKkC,O","sources":["src/js/Promises/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst creatBtn = document.querySelector('button[type=\"submit\"]')\nconst form = document.querySelector('form.form');\n\n\ncreatBtn.addEventListener('click', onPromiseCreate);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onPromiseCreate(e) {\n  e.preventDefault();\n  const { delay, step, amount } = form.elements;\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n  console.log(inputDelay);\n  console.log(inputStep);\n  console.log(inputAmount);\n  for (let i = 1; i <= inputAmount; i += 1) {\n    if (i > 1) { inputDelay += inputStep; }\n\n    createPromise(i, inputDelay)\n      .then(({ position, delay }) => {\n        Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n\n        );\n      });\n    form.reset();\n  }\n}"],"names":["$h6c0i","parcelRequire","$be6eb73fd90d0b94$var$creatBtn","document","querySelector","$be6eb73fd90d0b94$var$form","$be6eb73fd90d0b94$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","_elements","elements","delay1","step","amount","inputDelay","Number","value","inputStep","inputAmount","console","log","i","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.20033e65.js.map"}