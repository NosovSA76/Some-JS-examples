{"mappings":"mjBAMA,IAAIA,EACJ,MAAMC,EAAgBC,SAASC,cAAc,iBACvCC,EAAcF,SAASC,cAAc,iBACrCE,EAAYH,SAASC,cAAc,eAGzCF,EAAcK,MAAMC,QAAU,OAC9BH,EAAYE,MAAMC,QAAU,OAKWF,EAA7BG,iBAAiB,QAASC,EAAAC,EAAA,EACpC,SAAuBC,GACrB,MAAMC,EAAQP,EAAUO,MAAMC,OAC9B,IAAKD,EAGH,OASFX,EAAcK,MAAMC,QAAU,OAC9BH,EAAYE,MAAMC,QAAU,YAX1BO,IAIF,SAASA,IACTb,EAAcc,UAAY,GAC1BX,EAAYW,UAAY,E,EC7BKC,EDwCdJ,ECvCNK,MAAM,uCAAuCD,6CAC/CE,MAAKC,IACF,GAAwB,MAApBA,EAASC,OACT,MAAM,IAAIC,MAAMF,EAASC,QAE7B,OAAOD,EAASG,MAAM,KDmC7BJ,MAAKK,IACJvB,EAAcuB,EACVA,EAAKC,OAAS,KAChBvB,EAAcK,MAAMC,QAAU,OAC9BH,EAAYE,MAAMC,QAAU,OAC5BkB,EAAAC,OAAOC,KACL,+DAeV,SAAyBC,GACD,IAAlBA,EAAOJ,SACTvB,EAAcc,UAAY,GAC1Bd,EAAcK,MAAMC,QAAU,OAC9BH,EAAYE,MAAMC,QAAU,QAC5BH,EAAYW,UAAYc,EAA0BD,IAEhDA,EAAOJ,QAAU,GAAKI,EAAOJ,QAAU,KACzCpB,EAAYW,UAAY,GACxBX,EAAYE,MAAMC,QAAU,OAC5BN,EAAcK,MAAMC,QAAU,QAC9BN,EAAcc,UAAYe,EAA0BF,GA4C/B1B,SAAS6B,iBAAiB,mBAClCC,SAAQ,CAACC,EAAeC,KACrCD,EAAczB,iBAAiB,SAAS,KACtC,MAAM2B,EAAaF,EAAcG,YAAYvB,OAC7CR,EAAUO,MAAQuB,EAClB,MAAME,EAAcrC,EAAYkC,GAC1BI,EAAoBT,EAA0B,CAACQ,IACrDjC,EAAYW,UAAYuB,EACxBrC,EAAcK,MAAMC,QAAU,OAC9BH,EAAYE,MAAMC,QAAU,OAAO,GACnC,I,CA5EAgC,CAAgBhB,EAAK,IAEtBiB,OAAMC,IACL3B,IACAW,EAAAC,OAAOgB,QAAQ,2CAA2C,ICvDlC,IAAC1B,C,GDKR,MAyEvB,MAAMa,EAA4BN,IAChC,IAAIoB,EAAQ,EACZ,OAAOpB,EAAKqB,QACV,CAACC,GAAQC,OAAOC,IAAEA,GAAK/B,KAAEA,EAAIgC,QAAEA,EAAOC,WAAEA,EAAUC,UAAEA,MAClDP,IACAO,EAAYC,OAAOC,OAAOF,GAAWG,KAAK,MAExCR,EACA,6CACY,IAAVF,EAAc,QAAU,kCAEZI,WAAa/B,+CACpBA,EAAKsC,6CACUN,gDACGC,+CACDC,iCAI5B,GACD,EAGGpB,EAA4BP,GAChCA,EAAKqB,QAAO,CAACC,GAAQ7B,MAAMsC,SAAEA,EAAQC,OAAEA,GAAUT,OAAOC,IAAEA,OACxDS,QAAQC,IAAIZ,GAEVA,EACA,wFAEoCE,WAAaQ,iCACvCD,6CAIX","sources":["src/js/CountrySearch/index.js","src/js/CountrySearch/fetchCountries.js"],"sourcesContent":["import '../../sass/CountrySearch/CountySearch.scss';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport debounce from 'lodash.debounce';\nimport { fetchCountries } from './fetchCountries';\n\nconst DEBOUNCE_DELAY = 300;\nlet coumtryList\nconst countriesList = document.querySelector('.country-list');\nconst countryInfo = document.querySelector('.country-info');\nconst searchBox = document.querySelector('#search-box');\n\n\ncountriesList.style.display = 'none';\ncountryInfo.style.display = 'none';\n\n// Записуємо дані введені корсистувачем у змінну value з затримкою в 0,3 сек, при очищені вікна пошуку\n// скриваємо інформацію з попереднього запросу\n\nsearchBox.addEventListener('input', debounce(onInputSearch, DEBOUNCE_DELAY));\nfunction onInputSearch(e) {\n  const value = searchBox.value.trim();\n  if (!value) {\n    addHidden();\n    clearInterfaceUI();\n    return;\n  }\n\n  function clearInterfaceUI() {\n  countriesList.innerHTML = '';\n  countryInfo.innerHTML = '';\n}\n\nfunction addHidden() {\n  countriesList.style.display = 'none';\n  countryInfo.style.display = 'none';\n}\n\n  // використовуємо дані які вносить користувач для створення запросу на API сервер у разі якщо отриманий массив більше 10\n  // обєктів виводимо повідомлення з проханням уточнити запрос, якщо отримуємо пустий масив виводимо повідомленні щодо хибного пошуку\n\n  fetchCountries(value)\n    .then(data => {\n      coumtryList = data\n      if (data.length > 10) {\n        countriesList.style.display = 'none';\n        countryInfo.style.display = 'none';\n        Notify.info(\n          'Too many matches found. Please enter a more specific name.'\n\n        );\n      }\n      renderCountries(data);\n    })\n    .catch(err => {\n      clearInterfaceUI();\n      Notify.failure('Oops, there is no country with that name');\n    });\n}\n\n// Якщо в результаті запросу отриман лише 1 один обєкт виводимо інформацію щощдо країни, якщо декілько створюємо перелік\n// зі скороченою інформацією(прапор, назва) у виді кнопок доступних для натискання для уточнення запросу\n\nfunction renderCountries(result) {\n  if (result.length === 1) {\n    countriesList.innerHTML = '';\n    countriesList.style.display = 'none';\n    countryInfo.style.display = 'block';\n    countryInfo.innerHTML = generateMarkupCountryInfo(result);\n  }\n  if (result.length >= 2 && result.length <= 10) {\n    countryInfo.innerHTML = '';\n    countryInfo.style.display = 'none';\n    countriesList.style.display = 'block';\n    countriesList.innerHTML = generateMarkupCountryList(result);\n    countryButton()\n  }\n}\n\nconst generateMarkupCountryInfo = data => {\n  let count = 0;\n  return data.reduce(\n    (same, { flags: { svg }, name, capital, population, languages }) => {\n      count++;\n      languages = Object.values(languages).join(', ');\n      return (\n        same +\n        `<div class=\"country-card\" style=\"display: ${\n          count === 1 ? \"block\" : \"none\"\n        };\">\n          <img src=\"${svg}\" alt=\"${name}\" width=\"320\" height=\"auto\">\n          <p>${name.official}</p>\n          <p>Capital: <span>${capital}</span></p>\n          <p>Population: <span>${population}</span></p>\n          <p>Languages: <span>${languages}</span></p>\n        </div>`\n      );\n    },\n    \"\"\n  );\n};\n\nconst generateMarkupCountryList = data =>\n  data.reduce((same, { name: { official, common }, flags: { svg } }) => {\n    console.log(same)\n    return (\n      same +\n      `<li>\n      <button class=\"country-button\">\n        <img class=\"countrys-flag\" src=\"${svg}\" alt=\"${common}\" width=\"70\">\n        <span>${official}</span>\n        </button>\n      </li>`\n    );\n  }, '');\n\n\nfunction countryButton() {\n  const countryButtons = document.querySelectorAll('.country-button');\n  countryButtons.forEach((countryButton, index) => {\n    countryButton.addEventListener('click', () => {\n      const buttonText = countryButton.textContent.trim();\n      searchBox.value = buttonText;\n      const countryData = coumtryList[index];\n      const countryInfoMarkup = generateMarkupCountryInfo([countryData]);\n      countryInfo.innerHTML = countryInfoMarkup;\n      countriesList.style.display = 'none';\n      countryInfo.style.display = 'block';\n    });\n  });\n}","export const fetchCountries = (name) => {\n    return fetch(`https://restcountries.com/v3.1/name/${name}?name,capital,population,flags,languages`)\n        .then(response => {\n            if (response.status === 404) {\n                throw new Error(response.status);\n            }\n            return response.json();\n        });\n};\n\n"],"names":["$4be2cae9fd6f4699$var$coumtryList","$4be2cae9fd6f4699$var$countriesList","document","querySelector","$4be2cae9fd6f4699$var$countryInfo","$4be2cae9fd6f4699$var$searchBox","style","display","addEventListener","$parcel$interopDefault","$50Kfe","e","value","trim","clearInterfaceUI","innerHTML","name","fetch","then","response","status","Error","json","data","length","$iQIUW","Notify","info","result","$4be2cae9fd6f4699$var$generateMarkupCountryInfo","$4be2cae9fd6f4699$var$generateMarkupCountryList","querySelectorAll","forEach","countryButton1","index","buttonText","textContent","countryData","countryInfoMarkup","$4be2cae9fd6f4699$var$renderCountries","catch","err","failure","count","reduce","same","flags","svg","capital","population","languages","Object","values","join","official","common","console","log"],"version":3,"file":"CountrySearch.3706ba6b.js.map"}